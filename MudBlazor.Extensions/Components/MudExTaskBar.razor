@using Microsoft.AspNetCore.Components.Rendering
@using MudBlazor.Extensions.Components.ObjectEdit
@inherits MudExSlideBar

@if (HasItems)
{
    @Inherited()
}

@code {
    private RenderFragment Inherited() => builder => base.BuildRenderTree(builder);
    public override RenderFragment ChildContent { get => TaskBarContent; set {} }

    [Parameter] public string CloseIcon { get; set; } = Icons.Material.Filled.Close;
    protected void TaskBarContent(RenderTreeBuilder __builder)
    {
        @if (_taskbarItems?.Any() == true || !OnlyVisibleWithWindows)
        {
            <MudDynamicTabs Class="mud-ex-task-bar" Elevation="2" AddIconStyle="display:none;" Square="true" CloseTabIcon="@CloseIcon" Rounded="false" Position="@Position" Centered="false" Color="Color.Dark" CloseTab="@(CloseWindow)">
                @foreach (var taskBarItem in _taskbarItems)
                {
                    <MudTabPanel 
                        Class="@($"mud-ex-task-bar-item-for-{taskBarItem.DialogId}")" 
                        OnClick="@(() => ShowWindow(taskBarItem))" 
                        Tag="@taskBarItem.DialogId"
                        Icon="@(taskBarItem.DialogData.Icon != CloseIcon ? taskBarItem.DialogData.Icon: null)" 
                        Text="@taskBarItem.DialogData.Title"/>
                }
            </MudDynamicTabs>
        }
    }
}