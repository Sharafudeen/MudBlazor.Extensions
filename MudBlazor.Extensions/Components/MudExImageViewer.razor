@using Microsoft.AspNetCore.Components.Rendering
@inherits MudExJsRequiredBaseComponent<MudExImageViewer>
@namespace MudBlazor.Extensions.Components


<div @ref="ContainerElement" @onkeydown="ContainerKeyDown" style="@StyleStr()">
    <div style="@RubberBandStyleStr()" @ref="_rubberBand"></div>
    @SelectionToolbar()
    @if (!string.IsNullOrEmpty(StatusText))
    {
        <MudText Style="text-align: center; width: 100%" Typo="Typo.h4">@TryLocalize(StatusText)</MudText>
    }
    @if (ShowTools() && string.IsNullOrEmpty(StatusText) && ToolbarAlign().ToolbarPosition == "top")
    {
        @RenderToolBar()
    }

    <div @ref=ElementReference id="@_id" style="@InnerViewerStyle()">
    </div>
    @if (ShowTools() && string.IsNullOrEmpty(StatusText) && (ToolbarAlign().ToolbarPosition == "bottom" || ToolbarAlign().ToolbarPosition == "center"))
    {
        @RenderToolBar()
    }
</div>

@code
{
    RenderFragment SelectionToolbar()
    {
        return @<div @ref="_selectionToolBar" style="display: none; z-index: 1">
                   <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Open in new browser tab")" Class="ml-1" OnClick="@(OpenSelectionInNewTab)" Icon="@Icons.Material.Filled.OpenInNew" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" />
                   <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Download")" Class="ml-1" OnClick="@(SaveSelection)" Icon="@Icons.Material.Filled.Download" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" />
                   <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Print")" Class="ml-1" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" OnClick="@PrintSelectionClick" Icon="@PrintButtonIcon"/>
                   <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Swap")" Class="ml-1" OnClick="@(SwapToSelection)" Icon="@Icons.Material.Filled.SwapVerticalCircle" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" />
                    @SelectedAreaToolbarContent
               </div>;
    }

    RenderFragment RenderToolBar()
    {
        return @<MudToolBar WrapContent="true" Style="@ToolbarStyleStr()" Dense="@Dense">
                   @if (NeedSpacer(false))
                   {
                       <MudSpacer/>
                   }
                   <div>
                       <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Undo")" Visible="@CanUndo()" Class="ml-1" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" OnClick="@Undo" Icon="@UndoIcon"/>
                       <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Zoom in")" Visible="@ShowZoomInButton" Class="ml-1" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" OnClick="@ZoomInClick" Icon="@ZoomInButtonIcon"/>
                       <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Zoom out")" Visible="@ShowZoomOutButton" Class="ml-1" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" OnClick="@ZoomOutClick" Icon="@ZoomOutButtonIcon"/>
                       <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Reset view")" Visible="@ShowResetButton" Class="ml-1" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" OnClick="@ResetClick" Icon="@ResetButtonIcon"/>
                       <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Fullscreen")" Visible="@ShowFullScreenButton" Class="ml-1" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" OnClick="@FullscreenClick" Icon="@FullScreenButtonIcon"/>
                       <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Print")" Visible="@ShowPrintButton" Class="ml-1" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" OnClick="@PrintClick" Icon="@PrintButtonIcon"/>
                       <MudExIconButton Size="@ToolbarButtonSize" ToolTip="@TryLocalize("Save as")" Visible="@ShowSaveButton" Class="ml-1" Variant="@ToolbarButtonVariant" Color="@ToolbarButtonColor" OnClick="@SaveAsClick" Icon="@SaveButtonIcon"/>
                       @if (AllowRubberBandSelection)
                       {
                            <MudTooltip RootClass="ml-1" Class="ml-1" Text="@TryLocalize("Start/Stop selection")">
                                <MudToggleIconButton Size="@ToolbarButtonSize"
                                                     Class="ml-1" 
                                                    Variant="@ToolbarButtonVariant"
                                                    ToggledChanged="ToggleRubberBandSelection"
                                                    Icon="@SelectionModeIcon"
                                                    ToggledIcon="@SelectionModeIcon"
                                                    Color="@ToolbarButtonColor"
                                                    ToggledColor="Color.Warning">
                               </MudToggleIconButton>
                           </MudTooltip>
                       }
                       @ToolbarContent
                   </div>
                   @if (NeedSpacer(true))
                   {
                       <MudSpacer/>
                   }
               </MudToolBar>;
    }

    private void ContainerKeyDown(KeyboardEventArgs args)
    {
        if (args.Key is "Z" or "z" && args.CtrlKey)
        {
            Undo();
        }
    }
}

