export function initializeMoveContent(t,i){return new n(t,i)}class n{elementRef;dotnet;selector;elFromSelector;mode;position;constructor(n,t){this.elementRef=n;this.dotnet=t}getSourceAndTarget(n){return n==="MoveFromSelector"?{source:this.elFromSelector,target:this.elementRef}:{source:this.elementRef,target:this.elFromSelector}}move(n,t,i,r,u){var e,f;if(this.mode=t,this.position=i,this.selector=n,(!r||!r.querySelector)&&u&&this.elementRef&&(r=this.elementRef.parentElement),r&&r.querySelector){if(u){e=typeof u=="number"?u:1;for(let n=0;n<e;n++)if(r.parentElement)r=r.parentElement;else break}}else r=document;this.elFromSelector=r.querySelector(n);f=this.getSourceAndTarget(t);this.elFromSelector&&f.source&&f.target&&!f.target.contains(f.source)&&!f.source.contains(f.target)&&(i==="BeforeBegin"?f.target.insertBefore(f.source,f.target.firstChild):i==="AfterBegin"?f.target.insertBefore(f.source,f.target.firstChild.nextSibling):i==="BeforeEnd"?f.target.insertBefore(f.source,f.target.lastChild):i==="AfterEnd"&&f.target.appendChild(f.source))}dispose(){try{var n=this.getSourceAndTarget(this.mode);n&&n.target&&n.source&&n.target.contains(n.source)&&n.target.removeChild(n.source)}catch(t){}}}window.MoveContent=n;