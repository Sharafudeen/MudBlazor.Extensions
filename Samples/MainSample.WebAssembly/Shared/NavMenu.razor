@using Nextended.Core.Extensions

<div>
    <MudNavMenu>
        <MudTreeView Items="@Entries">
            <ItemTemplate>
                @if (context.Text == "-")
                {
                    <MudExDivider />
                }
                else
                {
                    <MudTreeViewItem @bind-Expanded="@context.IsExpanded" Items="@context.Children">
                        <Content>
                            @if (HasAction(context))
                            {
                                <MudNavLink Href="@context.Href" Match="@(context.Href == "/" ? NavLinkMatch.All : NavLinkMatch.Prefix)" Target="@context.Target" IconColor="@context.GetIconColor()" Icon="@context.Icon">
                                    <p style="@GetStyle(context, false)">@context.Text</p>
                                </MudNavLink>
                            }
                            else
                            {
                                @if (!context.Icon.IsNullOrWhiteSpace())
                                {
                                    <MudIcon Color="@context.GetIconColor()" Icon="@context.Icon" Class="ml-0 mr-2"/>
                                }

                                <MudListSubheader Class="@(CanExpand(context) ? "cursor-pointer" : "")" @onclick="() => OnExpandCollapseClick(context)">
                                    <p style="@GetStyle(context, true)">@context.Text</p>
                                </MudListSubheader>

                                <div class="apply-right">
                                    <MudTreeViewItemToggleButton Visible="CanExpand(context)" Expanded="context.IsExpanded" ExpandedChanged="() => OnExpandCollapseClick(context)"/>
                                </div>
                            }
                        </Content>
                    </MudTreeViewItem>
                }
            </ItemTemplate>
        </MudTreeView>
    </MudNavMenu>

</div>

@code {
    private string GetStyle(NavigationEntry context, bool withAction)
    {
        if (context.Bold == true || (!withAction && context.Demo == null && context.Parent == null) || (withAction && context.Demo == null && context.Parent == null && context.IsExpanded))
            return "font-weight: bold;";
        return "";
    }

}